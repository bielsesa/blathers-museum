{"version":3,"sources":["components/home-component/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Home","React","Component","TabPanel","props","children","value","index","other","role","hidden","id","aria-labelledby","Box","p","Typography","a11yProps","useStyles","makeStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","About","Fish","Insects","Fossils","Art","App","useState","setValue","AppBar","position","Tabs","onChange","event","newValue","aria-label","Tab","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSAQeA,E,uKAJP,OAAO,0C,GAFIC,IAAMC,W,wCCWzB,SAASC,EAASC,GAAQ,IAChBC,EAAqCD,EAArCC,SAAUC,EAA2BF,EAA3BE,MAAOC,EAAoBH,EAApBG,MAAUC,EADZ,YACsBJ,EADtB,8BAGvB,OACE,6CACEK,KAAK,WACLC,OAAQJ,IAAUC,EAClBI,GAAE,0BAAqBJ,GACvBK,kBAAA,qBAA+BL,IAC3BC,GALN,aAOGF,IAAUC,GACT,cAACM,EAAA,EAAD,CAAKC,EAAG,EAAR,SACE,cAACC,EAAA,EAAD,UAAaV,SAavB,SAASW,EAAUT,GACjB,MAAO,CACLI,GAAG,cAAD,OAAgBJ,GAClB,gBAAgB,mBAAhB,OAAoCA,IAIxC,IAAMU,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,EACVC,gBAAiBH,EAAMI,QAAQC,WAAWC,WA8C9C,IAAMC,EAAQ,kBAAM,8BAAK,0CACnBC,EAAO,kBAAM,8BAAK,yCAClBC,EAAU,kBAAM,8BAAK,4CACrBC,EAAU,kBAAM,8BAAK,4CACrBC,EAAM,kBAAM,8BAAK,wCAERC,EAhDf,WACkBd,IAAhB,IADa,EAEahB,IAAM+B,SAAS,GAF5B,mBAEN1B,EAFM,KAEC2B,EAFD,KAQb,OACI,gCACE,cAACC,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,EAAA,EAAD,CAAM9B,MAAOA,EAAO+B,SAPP,SAACC,EAAOC,GAC3BN,EAASM,IAMyCC,aAAW,sBAAvD,UACE,cAACC,EAAA,EAAD,aAAKC,MAAM,QAAW1B,EAAU,KAChC,cAACyB,EAAA,EAAD,aAAKC,MAAM,SAAY1B,EAAU,KACjC,cAACyB,EAAA,EAAD,aAAKC,MAAM,QAAW1B,EAAU,KAChC,cAACyB,EAAA,EAAD,aAAKC,MAAM,WAAc1B,EAAU,KACnC,cAACyB,EAAA,EAAD,aAAKC,MAAM,WAAc1B,EAAU,KACnC,cAACyB,EAAA,EAAD,aAAKC,MAAM,OAAU1B,EAAU,UAGnC,cAACb,EAAD,CAAUG,MAAOA,EAAOC,MAAO,EAA/B,SACE,cAAC,EAAD,MAEF,cAACJ,EAAD,CAAUG,MAAOA,EAAOC,MAAO,EAA/B,SACE,cAAC,EAAD,MAEF,cAACJ,EAAD,CAAUG,MAAOA,EAAOC,MAAO,EAA/B,SACE,cAAC,EAAD,MAEF,cAACJ,EAAD,CAAUG,MAAOA,EAAOC,MAAO,EAA/B,SACE,cAAC,EAAD,MAEF,cAACJ,EAAD,CAAUG,MAAOA,EAAOC,MAAO,EAA/B,SACE,cAAC,EAAD,MAEF,cAACJ,EAAD,CAAUG,MAAOA,EAAOC,MAAO,EAA/B,SACE,cAAC,EAAD,UC7EKoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8a0d4fba.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Home extends React.Component {\r\n    render() {\r\n        return <h1>Home</h1>\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport './App.css';\n\nimport Home from './components/home-component/Home';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport PropTypes from 'prop-types';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n      <div>\n        <AppBar position=\"static\">\n          <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n            <Tab label=\"Home\" {...a11yProps(0)} />\n            <Tab label=\"About\" {...a11yProps(1)} />\n            <Tab label=\"Fish\" {...a11yProps(2)} />\n            <Tab label=\"Insects\" {...a11yProps(3)} />\n            <Tab label=\"Fossils\" {...a11yProps(4)} />\n            <Tab label=\"Art\" {...a11yProps(5)} />\n          </Tabs>\n        </AppBar>\n        <TabPanel value={value} index={0}>\n          <Home />\n        </TabPanel>\n        <TabPanel value={value} index={1}>\n          <About />\n        </TabPanel>\n        <TabPanel value={value} index={2}>\n          <Fish />\n        </TabPanel>\n        <TabPanel value={value} index={3}>\n          <Insects />\n        </TabPanel>\n        <TabPanel value={value} index={4}>\n          <Fossils />\n        </TabPanel>\n        <TabPanel value={value} index={5}>\n          <Art />\n        </TabPanel>\n      </div>\n  );\n}\n\nconst About = () => <div><h2>About</h2></div>\nconst Fish = () => <div><h2>Fish</h2></div>\nconst Insects = () => <div><h2>Insects</h2></div>\nconst Fossils = () => <div><h2>Fossils</h2></div>\nconst Art = () => <div><h2>Art</h2></div>\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}